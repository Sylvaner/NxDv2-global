# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install MQTT
        run: |
          cd mqtt/debian
          sudo ./install.sh
          systemctl status mosquitto

      - name: Install DB
        run: |
          sudo apt-get purge mongodb-database-tools mongodb-org mongodb-org-database-tools-extra mongodb-org-mongos mongodb-org-server mongodb-org-shell mongodb-org-tools
          cd db/debian
          sudo ./install.sh
          systemctl status mongod

      - name: Install NodeRed
        run: |
          cd nodered/debian
          sudo ./install.sh
          systemctl status nextdom-nodered

      - name: Install Logic
        run: |
          git clone https://github.com/Sylvaner/NxDv2-logic logic
          cd logic/debian
          ./build.sh
          sudo ./install.sh
          systemctl status nextdom-logic
      
      - name: Install Api
        run: |
          git clone https://github.com/Sylvaner/NxDv2-api api
          cd api/debian
          ./build.sh
          sudo ./install.sh
          systemctl status nextdom-api

      - name: Test process
        run: |
          sudo apt-get install -y mosquitto-clients 2>&1
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/lights/$name' -m 'Lights'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/lights/$properties' -m 'on,bri'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/lights/on/$name' -m 'On'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/lights/on/$datatype' -m 'boolean'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/lights/on/$settable' -m 'true'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/lights/bri/$name' -m 'Brightness'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/lights/bri/$datatype' -m 'integer'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/lights/bri/$settable' -m 'true'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/lights/bri/$format' -m '1:254'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/$homie' -m '4.0'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/$name' -m 'My light'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/$state' -m 'ready'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/$nodes' -m 'lights'
          mosquitto_pub -h localhost -u nextdom -P mqttpassword -t 'homie/lights-2/lights/on' -m 'true'
          sleep 15
          DEVICES=$(curl -X GET "http://localhost:3000/device")
          echo $DEVICES | grep 'homie/lights-2/lights/on'

      - name: Logs on fail
        if: ${{ failure() }}
        run: |
          sudo apt-get install -y net-tools
          sudo tail -n 100 /var/log/mongodb/mongod.log
          sudo tail -n 100 /var/log/mosquitto/mosquitto.log
          sudo journalctl -n 100 -u nextdom-api
          sudo journalctl -n 100 -u nextdom-logic
          sudo journalctl -n 100 -u nextdom-noderedq
          sudo netstat -putan
          sudo ps -A
          curl -X GET http://localhost:3000/device


      # Runs a single command using the runners shell

#      - name: Run a one-line script
#        run: echo Hello, world!

# Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.
